package account.controller;import account.model.dto.data.AppUserDTO;import account.model.dto.requests.NewPasswordRequest;import account.model.dto.requests.SignupRequestDTO;import account.model.entity.AppUser;import account.model.record.SignUpResponse;import account.model.record.UpdatePasswordResponse;import account.service.AppUserService;import jakarta.validation.Valid;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.io.IOException;@RestController@RequestMapping("/api")@Validatedpublic class AuthController {    AppUserService appUserService;    public AuthController(AppUserService appUserService) {        this.appUserService = appUserService;    }    @PostMapping("/auth/signup")    public ResponseEntity<SignUpResponse> signup(@Valid @RequestBody                                                 SignupRequestDTO request) throws            Exception {        AppUser newUser = appUserService.saveUser(request);        SignUpResponse response = new SignUpResponse(newUser.getId(),                newUser.getName(), newUser.getLastname(), newUser.getEmail(),                appUserService.getUserRoleNames(newUser.getRoles()));        return ResponseEntity.ok(response);    }    @PostMapping("/auth/changepass")    public ResponseEntity<UpdatePasswordResponse> changePassword(            @Valid @RequestBody            NewPasswordRequest request,            Authentication auth) throws IOException {        AppUserDTO details = (AppUserDTO) auth.getPrincipal();        System.out.println("changepass request");        System.out.println(details.getUser().getEmail());        System.out.println(request.getNew_password());        appUserService.changePassword(details.getUser(),                request.getNew_password());        return ResponseEntity.ok(new UpdatePasswordResponse(                details.getUsername(),                "The password has been updated successfully"));    }}